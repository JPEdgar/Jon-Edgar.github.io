{"version":3,"sources":["components/MyPath/components/GridSettings.jsx","components/MyPath/contexts/GridContext.jsx","components/MyPath/components/SlideBar.jsx","components/MyPath/components/BuildGrid.jsx","components/MyPath/algorithms/FindNeighbor.jsx","components/MyPath/components/Grid.jsx","components/MyPath/MyPath.jsx","pages/Algos.jsx.jsx","pages/Projects.jsx","pages/About.jsx","App.js","index.js"],"names":["GridDetails","StartNode","EndNode","GridContext","createContext","ACTIONS","GRID_ROWS_SET","GRID_COLS_SET","CELL_SIZE","DRAW_WALL","TOGGLE_START","TOGGLE_END","SET_START","SET_END","RESET","DISABLE_UI","START_ANIM","SEARCHED_NODES","START_SEARCH_ANIMATIONS","LUCKY_NODE","ANIMATION_DELAY","NO_END","initialState","numRows","numCols","cellSize","stroke","startPos","endPos","setStart","setEnd","setDrawWall","disableUI","startAnim","animationDelay","searchedNodes","startSearchedAnimation","noEnd","luckyNode","reducer","state","action","type","BUILD_GRID","parseInt","payload","concat","GridProvider","props","useReducer","dispatch","Provider","value","children","SlideBar","item","id","label","min","max","step","enable","useContext","override","overrideText","className","disabled","hidden","onChange","e","target","htmlFor","style","fontSize","BuildGrid","grid","i","push","j","BuildCell","row","col","wasVisited","currClass","nodeClass","x-loc","y-loc","was-visited","toString","height","width","border","FindNeighbor","startSpot","returnArr","continueSearch","foundEnd","forEach","searchSpot","tempSpot","map","num","idx","searchPos","element","document","getElementById","classList","contains","setAttribute","getAttribute","AssessNode","Grid","useState","setGrid","searchNode","isSearching","searchArray","GetNeighbor","locatedEnd","length","shift","searchResults","returnLuckyNode","useEffect","tempSearched","count","interval","setInterval","activeNode","ReactDOM","findDOMNode","add","clearInterval","AnimateSearchedNodes","path","listOfChildren","search","start","parent","slice","FindPath","setTimeout","pop","shorthand","AnimatePath","mouseDown","setMouseDown","handleDocumentMouseUp","event","button","addEventListener","removeEventListener","handleMouseDown","tempDraw","handleWall","handleMouseEnter","handleMouseUp","window","getSelection","removeAllRanges","remove","display","color","callback","marginLeft","backgroundColor","onClick","SearchForNeighbors","console","log","clickLocation","handleClick","flexDirection","rows","cell","onMouseDown","onMouseEnter","onMouseUp","MyPath","rel","href","margin","Algos","algo","setAlgo","handleComp","Projects","About","App","justifyContent","alignItems","to","exact","render","StrictMode"],"mappings":"iPAAaA,EACF,GADEA,EAEF,GAFEA,EAGD,GAHCA,EAIH,IAIGC,EACL,EADKA,EAEL,EAGKC,EACL,EADKA,EAEL,E,OCbKC,EAAcC,0BAEdC,EAAU,CACrBC,cAAe,gBACfC,cAAe,gBACfC,UAAW,YACXC,UAAW,YACXC,aAAc,eACdC,WAAY,aACZC,UAAW,YACXC,QAAS,UACTC,MAAO,QACPC,WAAY,aACZC,WAAY,kBACZC,eAAgB,iBAChBC,wBAAyB,yBACzBC,WAAY,aACZC,gBAAiB,kBACjBC,OAAQ,UAGJC,EAAe,CAEnBC,QAASvB,EACTwB,QAASxB,EACTyB,SAAUzB,EACV0B,OAAQ1B,EAGR2B,SAAU,CAAC1B,EAAgBA,GAC3B2B,OAAQ,CAAC1B,EAAcA,GACvB2B,UAAU,EACVC,QAAQ,EAGRC,aAAa,EAGbC,WAAW,EACXC,WAAW,EACXC,eAAgB,GAChBC,cAAe,GACfC,wBAAwB,EACxBC,OAAO,EACPC,UAAW,IAGb,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MAEb,KAAKrC,EAAQsC,WACX,MAAO,GACT,KAAKtC,EAAQC,cACX,OAAO,2BAAKkC,GAAZ,IAAmBjB,QAASqB,SAASH,EAAOI,WAC9C,KAAKxC,EAAQE,cACX,OAAO,2BAAKiC,GAAZ,IAAmBhB,QAASoB,SAASH,EAAOI,WAC9C,KAAKxC,EAAQG,UACX,OAAO,2BACFgC,GADL,IAEEf,SAAUmB,SAASH,EAAOI,SAC1BnB,OAAmC,KAA3BkB,SAASH,EAAOI,WAI5B,KAAKxC,EAAQO,UACX,OAAO,2BACF4B,GADL,IAEEb,SAAS,YAAKc,EAAOI,WAEzB,KAAKxC,EAAQK,aACX,OAAO,2BACF8B,GADL,IAEEX,SAAUY,EAAOI,UAIrB,KAAKxC,EAAQQ,QACX,OAAO,2BACF2B,GADL,IAEEZ,OAAO,YAAKa,EAAOI,WAEvB,KAAKxC,EAAQM,WACX,OAAO,2BACF6B,GADL,IAEEV,OAAQW,EAAOI,UAInB,KAAKxC,EAAQI,UACX,OAAO,2BACF+B,GADL,IAEET,YAAaU,EAAOI,UAIxB,KAAKxC,EAAQS,MACX,OAAO,2BACF0B,GADL,IAEEjB,QAASvB,EACTwB,QAASxB,EACTyB,SAAUzB,EACV0B,OAAQ1B,EAGR2B,SAAU,CAAC1B,EAAgBA,GAC3B2B,OAAQ,CAAC1B,EAAcA,GACvB2B,UAAU,EACVC,QAAQ,EAGRC,aAAa,EAGbC,WAAW,EACXC,WAAW,EACXC,eAAgB,GAChBC,cAAe,GACfC,wBAAwB,EACxBC,OAAO,EACPC,UAAW,KAIf,KAAKjC,EAAQU,WACX,OAAO,2BACFyB,GADL,IAEER,UAAWS,EAAOI,UAEtB,KAAKxC,EAAQW,WACX,OAAO,2BACFwB,GADL,IAEEP,UAAWQ,EAAOI,UAEtB,KAAKxC,EAAQY,eACX,OAAO,2BACFuB,GADL,IAEEL,cAAe,YAAIK,EAAML,eAAeW,OAAOL,EAAOI,WAE1D,KAAKxC,EAAQa,wBACX,OAAO,2BACFsB,GADL,IAEEJ,uBAAwBK,EAAOI,UAEnC,KAAKxC,EAAQc,WACX,OAAO,2BACFqB,GADL,IAEEF,UAAWG,EAAOI,UAEtB,KAAKxC,EAAQe,gBACX,OAAO,2BACFoB,GADL,IAEEN,eAAiC,GAAjBO,EAAOI,UAE3B,KAAKxC,EAAQgB,OACX,OAAO,2BAAKmB,GAAZ,IAAmBH,MAAOI,EAAOI,UAEnC,QACE,OAAOL,GAIN,SAASO,EAAaC,GAAQ,IAAD,EACRC,qBAAWV,EAASjB,GADZ,mBAC3BkB,EAD2B,KACpBU,EADoB,KAGlC,OACE,cAAC/C,EAAYgD,SAAb,CAAsBC,MAAO,CAACZ,EAAOU,GAArC,SACGF,EAAMK,WClKE,SAASC,EAAT,GAA0D,IAgBnEC,EAhB6BC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAAU,EAC5CC,qBAAW3D,GADiC,mBAC/DqC,EAD+D,KACxDU,EADwD,KAclEa,GAAW,EACXC,EAAe,GAoBnB,MAlBc,SAAVP,EACFF,EAAOf,EAAMjB,QACM,SAAVkC,EACTF,EAAOf,EAAMhB,QACM,SAAViC,EACTF,EAAOf,EAAMf,SACM,oBAAVgC,IACTM,GAAW,EACXR,EAAOf,EAAMN,eAAiB,GACD,KAAzBM,EAAMN,eACR8B,EAAe,iBACmB,KAAzBxB,EAAMN,eACf8B,EAAe,mBACmB,KAAzBxB,EAAMN,iBACf8B,EAAe,mBAKjB,mCACE,iCACE,uBACEC,UAAU,SACVC,SAAUL,EACVM,OAAQN,EACRL,GAAE,gBAAWA,GACbd,KAAK,QACLgB,IAAKA,EACLC,IAAKA,EACLP,MAAOG,EACPK,KAAMA,EACNQ,SA9Ca,SAACC,GACN,SAAVZ,EACFP,EAAS,CAAER,KAAMrC,EAAQC,cAAeuC,QAASwB,EAAEC,OAAOlB,QACvC,SAAVK,EACTP,EAAS,CAAER,KAAMrC,EAAQE,cAAesC,QAASwB,EAAEC,OAAOlB,QACvC,SAAVK,EACTP,EAAS,CAAER,KAAMrC,EAAQG,UAAWqC,QAASwB,EAAEC,OAAOlB,QACnC,oBAAVK,GACTP,EAAS,CAAER,KAAMrC,EAAQe,gBAAiByB,QAASwB,EAAEC,OAAOlB,WAwC1D,uBAEEmB,QAAO,gBAAWf,GAClBW,OAAQN,EACRW,MAAO,CAAEC,SAAU,QAJrB,SAMGV,EAAQ,WAAOC,GAAP,WAA4BT,EAA5B,YAAoCE,U,MCzDxC,SAASiB,EAAUlC,GAEhC,IADA,IAAMmC,EAAO,GACJC,EAAI,EAAGA,EAAIpC,EAAMjB,QAASqD,IAAK,CACtCD,EAAKE,KAAK,IACV,IAAK,IAAIC,EAAI,EAAGA,EAAItC,EAAMhB,QAASsD,IACjCH,EAAKC,GAAGC,KAAKE,EAAUH,EAAGE,IAI9B,SAASC,EAAUC,EAAKC,GACtB,IAEIC,EAFEC,EAAY,OACdC,EAAY,GAchB,OAXI5C,EAAMb,SAAS,KAAOqD,GAAOxC,EAAMb,SAAS,KAAOsD,GACrDG,EAAYD,EAAUrC,OAAO,cAC7BoC,GAAa,GACJ1C,EAAMZ,OAAO,KAAOoD,GAAOxC,EAAMZ,OAAO,KAAOqD,GACxDG,EAAYD,EAAUrC,OAAO,YAC7BoC,GAAa,IAEbE,EAAYD,EAAUrC,OAAO,kBAC7BoC,GAAa,GAIb,qBAEE1B,GAAE,UAAKyB,EAAL,aAAaD,GACfK,QAAOJ,EACPK,QAAON,EACPO,cAAaL,EAAWM,WACxBvB,UAAWmB,EACXZ,MAAO,CACLiB,OAAQjD,EAAMf,SACdiE,MAAOlD,EAAMf,SACbkE,OAAO,GAAD,OAAKnD,EAAMd,OAAX,kBAVV,UACUuD,EADV,aACkBD,IAiBtB,OAAOL,EChDM,SAASiB,EAAaC,EAAWrD,GAE9C,IAOMsD,EAAY,GACdC,GAAiB,EACjBC,GAAW,EACX1D,EAAY,GA2ChB,MArD0B,CACxB,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,IAQW2D,SAAQ,SAACC,GACzB,IAAIC,EAAWD,EAAWE,KAAI,SAACC,EAAKC,GAClC,OAAOD,EAAMR,EAAUS,MAIvBH,EAAS,GAAK,GACdA,EAAS,IAAM3D,EAAMhB,SACrB2E,EAAS,IAAM3D,EAAMjB,SACrB4E,EAAS,GAAK,GAKZJ,GAKN,SAAoBQ,GAClB,IAAMC,EAAUC,SAASC,eAAT,UAA2BH,EAAU,GAArC,aAA4CA,EAAU,KAElEC,EAAQG,UAAUC,SAAS,eAEpBJ,EAAQG,UAAUC,SAAS,YAEpCb,GAAiB,EACjBC,GAAW,EACX1D,EAAYiE,EACZC,EAAQK,aAAa,cAArB,UAAuChB,EAAU,GAAjD,aAAwDA,EAAU,MACjB,SAAxCW,EAAQM,aAAa,gBAErBN,EAAQG,UAAUC,SAAS,cAIpCJ,EAAQK,aAAa,cAAe,QACpCL,EAAQK,aAAa,cAArB,UAAuChB,EAAU,GAAjD,aAAwDA,EAAU,KAClEC,EAAUjB,KAAK0B,KAvBfQ,CAAWZ,MA0BR,CAACL,EAAWC,EAAgBC,EAAU1D,GChDhC,SAAS0E,IAAQ,IAAD,EACHlD,qBAAW3D,GADR,mBACtBqC,EADsB,KACfU,EADe,OAEL+D,mBAASvC,EAAUlC,IAFd,mBAEtBmC,EAFsB,KAEhBuC,EAFgB,KAGzBC,EAAa,GACbC,GAAc,EACdC,EAAc,GA0IlB,SAASC,IACP,IAAIC,GAAa,EAejB,GAbIF,EAAYG,QAAU,IAAMJ,GAE9BD,EAAU,YAAO3E,EAAMb,UACvByF,GAAc,GACLC,EAAYG,OAAS,EAE9BL,EAAaE,EAAYI,SAGzBvE,EAAS,CAAER,KAAMrC,EAAQgB,OAAQwB,SAAS,IAC1CuE,GAAc,GAGZD,EAAWK,OAAS,EAAG,CAAC,IAAD,EAMrB5B,EAAauB,EAAY3E,GANJ,mBAEvBkF,EAFuB,KAGvB3B,EAHuB,KAIvBC,EAJuB,KAKvB2B,EALuB,KAQrB3B,IACFuB,EAAavB,EACb9C,EAAS,CAAER,KAAMrC,EAAQc,WAAY0B,QAAS8E,IAC9CP,GAAc,GAGZrB,GACFsB,EAAcA,EAAYvE,OAAO4E,GACjCxE,EAAS,CACPR,KAAMrC,EAAQY,eACd4B,QAAS6E,MAGXL,EAAcK,EACdxE,EAAS,CACPR,KAAMrC,EAAQY,eACd4B,QAAS6E,KAKXH,GACFrE,EAAS,CAAER,KAAMrC,EAAQa,wBAAyB2B,SAAS,IAnL/D+E,qBAAU,WACRV,EAAQxC,EAAUlC,MAEjB,CACDA,EAAMjB,QACNiB,EAAMhB,QACNgB,EAAMb,SACNa,EAAMZ,OACNY,EAAMf,WAIRmG,qBAAU,WACJpF,EAAMJ,wBAeZ,WACE,IAAMyF,EAAY,YAAOrF,EAAML,eAC3B2F,EAAQ,EACNC,EAAWC,aAAY,WAC3B,GAAIF,EAAQtF,EAAML,cAAcqF,OAAQ,CACtC,IAAMS,EAAaJ,EAAaJ,QAC1BjB,EAAUC,SAASC,eAAT,UACXuB,EAAW,GADA,aACOA,EAAW,KAEhBC,IAASC,YAAY3B,GAASG,UACtCyB,IAAI,oBAEdlF,EAAS,CAAER,KAAMrC,EAAQW,WAAY6B,SAAS,IAC9CwF,cAAcN,GAEhBD,MACCtF,EAAMN,gBA9BPoG,KAED,CAAC9F,EAAMJ,yBAGVwF,qBAAU,WACR,GAAIpF,EAAMP,UAAW,CACnB,IAAMsG,EA2BV,WACE,IAAMC,EAAiB,CAAC,GAAD,OAAIhG,EAAMF,UAAU,GAApB,aAA2BE,EAAMF,UAAU,KAE9DmG,GAAS,EACPC,EAAQlG,EAAMb,SAAS,GAAK,KAAOa,EAAMb,SAAS,GACxD,KAAO8G,GAAQ,CACb,IAAIE,EAASH,EAAeI,OAAO,GAGnC,GAAID,EAAO,IAAMD,EACfD,GAAS,MACJ,CACL,IAAMjC,EAAUC,SAASC,eAAeiC,GACpCnC,GACFgC,EAAe3D,KAAK2B,EAAQM,aAAa,iBAK/C,OAAO0B,EA9CQK,GACbC,YAAW,YAgDf,SAAqBN,GACnB,IAAI5D,EAAI4D,EAAehB,OACjBkB,EAAQlG,EAAMb,SAAS,GAAK,KAAOa,EAAMb,SAAS,GAClDoG,EAAWC,aAAY,WAC3B,GAAIpD,EAAI,EAAG,CACTA,IACA,IAAI2D,EAAOC,EAAeO,MAE1B,GAAIR,GAAQG,EAAO,CACjB,IAAMlC,EAAUC,SAASC,eAAe6B,GAClCS,EAAYd,IAASC,YAAY3B,GAASG,UAE7CqC,EAAUpC,SAAS,YACnBoC,EAAUpC,SAAS,cAEpBoC,EAAUZ,IAAI,gBAOnB5F,EAAMN,gBArEL+G,CAAYV,KACX/F,EAAMN,mBAEV,CAACM,EAAMP,YApCmB,MAqMKgF,oBAAS,GArMd,mBAqMtBiC,EArMsB,KAqMXC,EArMW,KAwM7BvB,qBAAU,WACR,IAAMwB,EAAwB,SAACC,GACR,IAAjBA,EAAMC,QACRR,YAAW,kBAAMK,GAAa,KAAQ,KAK1C,OADA1C,SAAS8C,iBAAiB,UAAWH,GAC9B,WACL3C,SAAS+C,oBAAoB,UAAWJ,MAEzC,IAEH,IAAMK,EAAkB,SAACJ,GACvB,IAAI7G,EAAMX,WAAYW,EAAMV,OAA5B,CAGA,IAAM0E,EAAUC,SAASC,eAAe2C,EAAM/E,OAAOd,IAC/CwF,EAAYd,IAASC,YAAY3B,GAASG,UAE3B,IAAjB0C,EAAMC,QACRH,GAAa,GAGf,IAAIO,GAAW,EACXV,EAAUpC,SAAS,YACrB1D,EAAS,CAAER,KAAMrC,EAAQI,UAAWoC,SAAS,KAE7CK,EAAS,CAAER,KAAMrC,EAAQI,UAAWoC,SAAS,IAC7C6G,GAAW,GAGbC,EAAWX,EAAWU,KAGlBE,EAAmB,SAACP,GACxB,IAAI7G,EAAMX,WAAYW,EAAMV,QAGP,IAAjBuH,EAAMC,QAAgBJ,EAAW,CACnC,IAAM1C,EAAUC,SAASC,eAAe2C,EAAM/E,OAAOd,IAErDmG,EADkBzB,IAASC,YAAY3B,GAASG,aAK9CkD,EAAgB,SAACR,GACA,IAAjBA,EAAMC,SACRH,GAAa,GAETW,OAAOC,cACTD,OAAOC,eAAeC,oBAQ5B,SAASL,EAAWX,GAA6B,IAAlBjF,EAAiB,uDAAN,KACpCiF,EAAUpC,SAAS,cAAgBoC,EAAUpC,SAAS,aAG1C,MAAZ7C,EACEA,EACFiF,EAAUZ,IAAI,YAEdY,EAAUiB,OAAO,YAIfzH,EAAMT,cAAgBiH,EAAUpC,SAAS,YAC3CoC,EAAUZ,IAAI,aAGN5F,EAAMT,aAAeiH,EAAUpC,SAAS,aAChDoC,EAAUiB,OAAO,aAavB,OACE,qCACE,0BAASzF,MAAO,CAAE0F,QAAS,QAA3B,UACE,sBAAK1F,MAAO,CAAEiB,OAAQ,OAAQC,MAAO,SAArC,UACE,mBACExB,UAAW1B,EAAMH,MACjB8B,QAAS3B,EAAMH,MACfmC,MAAO,CAAE2F,MAAO,OAHlB,4BAOA,mBACEjG,UAAW1B,EAAMH,MACjB8B,QAAS3B,EAAMH,MAFjB,+GASA,cAACiB,EAAD,CACEO,OAAQrB,EAAMR,UACdwB,GAAI,EACJC,MAAM,OACNC,IAAK,EACLC,IAAK,GACLC,KAAM,EACNR,MAAOZ,EAAMjB,QACb6I,SAAU5H,EAAMjB,UAElB,cAAC+B,EAAD,CACEO,OAAQrB,EAAMR,UACdwB,GAAI,EACJC,MAAM,OACNC,IAAK,EACLC,IAAK,GACLC,KAAM,EACNR,MAAOZ,EAAMhB,QACb4I,SAAU5H,EAAMhB,UAElB,cAAC8B,EAAD,CACEO,OAAQrB,EAAMR,UACdwB,GAAI,EACJC,MAAM,OACNC,IAAK,GACLC,IAAK,GACLC,KAAM,EACNR,MAAOZ,EAAMf,SACb2I,SAAU5H,EAAMf,WAElB,cAAC6B,EAAD,CACEO,OAAQrB,EAAMR,UACdwB,GAAI,EACJC,MAAM,kBACNC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNR,MAAOZ,EAAMN,eACbkI,SAAU5H,EAAMN,oBAIpB,wBACEgC,SAAU1B,EAAMR,UAChBmC,OAAQ3B,EAAMR,UACdwC,MAAO,CACLiB,OAAQ,OACRC,MAAO,QACP2E,WAAY,OACZC,gBAAiB9H,EAAMX,SAAW,wBAA0B,IAE9D0I,QAAS,kBACPrH,EAAS,CACPR,KAAMrC,EAAQK,aACdmC,SAAUL,EAAMX,YAZtB,uBAmBA,wBACEqC,SAAU1B,EAAMR,UAChBmC,OAAQ3B,EAAMR,UACdwC,MAAO,CACLiB,OAAQ,OACRC,MAAO,QACP2E,WAAY,OACZC,gBAAiB9H,EAAMV,OAAS,uBAAyB,IAE3DyI,QAAS,kBACPrH,EAAS,CACPR,KAAMrC,EAAQM,WACdkC,SAAUL,EAAMV,UAZtB,qBAmBA,wBACEoC,SAAU1B,EAAMR,UAChBmC,OAAQ3B,EAAMR,UACduI,QAAS,kBAhQjB,WACErH,EAAS,CAAER,KAAMrC,EAAQU,WAAY8B,SAAS,IAC9C,GACEyE,UACOF,GA4PYoD,IACfhG,MAAO,CAAEiB,OAAQ,OAAQC,MAAO,QAAS2E,WAAY,QAJvD,sBAQA,wBACEnG,UAAW1B,EAAMR,UACjBmC,QAAS3B,EAAMR,UACfuI,QAAS,kBAtHfE,QAAQC,IAAIlI,EAAM+E,YAClBrE,EAAS,CAAER,KAAMrC,EAAQS,QACzBoG,EAAQ,IACRC,EAAa,GACbC,GAAc,OACdC,EAAc,KAkHR7C,MAAO,CAAEiB,OAAQ,OAAQC,MAAO,QAAS2E,WAAY,QAJvD,sBASF,uBAEA,qBACEE,QAAS,SAAClG,GAAD,OA/Sf,SAAqBA,GACnB,IAAMsG,EAAgB,CACpB/H,SAASyB,EAAEC,OAAOwC,aAAa,UAC/BlE,SAASyB,EAAEC,OAAOwC,aAAa,WAG7BtE,EAAMX,UACRqB,EAAS,CACPR,KAAMrC,EAAQO,UACdiC,QAAS8H,IAEXzH,EAAS,CACPR,KAAMrC,EAAQK,aACdmC,SAAS,KAEFL,EAAMV,SACfoB,EAAS,CACPR,KAAMrC,EAAQQ,QACdgC,QAAS8H,IAEXzH,EAAS,CACPR,KAAMrC,EAAQM,WACdkC,SAAS,KAyRO+H,CAAYvG,IAC5BG,MAAO,CAAE0F,QAAS,OAAQW,cAAe,UAF3C,SAIGlG,EAAKyB,KAAI,SAAC0E,GACT,OACE,qBAEEtG,MAAO,CACL0F,QAAS,OACTW,cAAe,OAJnB,SAOGC,EAAK1E,KAAI,SAAC2E,GACT,OACE,qBAEEC,YAAavB,EACbwB,aAAcrB,EACdsB,UAAWrB,EAJb,SAMGkB,iBC9aN,SAASI,IACtB,OACE,gCACE,iLAKA,6DAC+B,IAC7B,mBACE7G,OAAO,SACP8G,IAAI,aACJC,KAAK,8DAHP,kCAMK,IARP,WAWA,uTAMA,oBAAI7G,MAAO,CAAE8G,OAAQ,cACrB,cAACvI,EAAD,UACE,cAACiE,EAAD,SC9BO,SAASuE,IAAS,IAAD,EACNtE,mBAAS,WADH,mBACvBuE,EADuB,KACjBC,EADiB,KAa9B,OACE,gCACE,wBAAQjH,MAAO,CAACkB,MAAO,SAAS6E,QAAS,WAX3CkB,EAW6D,YAA3D,8BACA,oBAAIxH,UAAU,eAAd,SAA8BuH,IATf,WACjB,GAAa,YAATA,EACF,OAAO,cAACL,EAAD,IAQNO,MCnBQ,SAASC,IACtB,OACE,gCACE,oBAAI1H,UAAU,eAAd,sBACA,0DAEA,2LAKA,+HAIA,qLAKA,mBACEK,OAAO,SACP8G,IAAI,aACJC,KAAK,6CACLpH,UAAU,gBACVO,MAAO,CAAEC,SAAU,UALrB,uBCpBS,SAASmH,IACtB,OACE,gCACE,oBAAI3H,UAAU,eAAd,sBACA,6XAQA,uPAKA,qLAKA,+EACA,qEACA,sFACA,8F,YCjBS,SAAS4H,IACtB,OACE,sBAAK5H,UAAU,OAAf,UACE,yBACEO,MAAO,CACL0F,QAAS,OACT4B,eAAgB,gBAChBC,WAAY,SACZtG,OAAQ,SALZ,UAQE,qBAAKxB,UAAU,gBAAf,4BACA,oBACEK,OAAO,SACP8G,IAAI,aACJC,KAAK,8BACLpH,UAAU,4BAJZ,UAMG,IANH,eAUF,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMA,UAAU,MAAM+H,GAAG,IAAzB,0BAIF,6BACE,cAAC,IAAD,CAAM/H,UAAU,MAAM+H,GAAG,YAAzB,wBAIF,6BACE,cAAC,IAAD,CAAM/H,UAAU,MAAM+H,GAAG,SAAzB,0BAMN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC1D,KAAK,IAAlB,SACE,cAACgD,EAAD,MAEF,cAAC,IAAD,CAAOhD,KAAK,YAAZ,SACE,cAACoD,EAAD,MAEF,cAAC,IAAD,CAAOpD,KAAK,SAAZ,SACE,cAACqD,EAAD,eCvDZ1D,IAASgE,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFpF,SAASC,eAAe,W","file":"static/js/main.b47559ee.chunk.js","sourcesContent":["export const GridDetails = {\r\n  numRows: 10,\r\n  numCols: 10,\r\n  cellSize: 30,\r\n  stroke: 0.75,\r\n  animationDelay: 30,\r\n};\r\n\r\nexport const StartNode = {\r\n  xLoc: 1,\r\n  yLoc: 2,\r\n};\r\n\r\nexport const EndNode = {\r\n  xLoc: 3,\r\n  yLoc: 3,\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { GridDetails, StartNode, EndNode } from \"../components/GridSettings\";\r\nexport const GridContext = createContext();\r\n\r\nexport const ACTIONS = {\r\n  GRID_ROWS_SET: \"grid-rows-set\",\r\n  GRID_COLS_SET: \"grid-cols-set\",\r\n  CELL_SIZE: \"cell-size\",\r\n  DRAW_WALL: \"draw-wall\",\r\n  TOGGLE_START: \"toggle-start\",\r\n  TOGGLE_END: \"toggle-end\",\r\n  SET_START: \"set-start\",\r\n  SET_END: \"set-end\",\r\n  RESET: \"reset\",\r\n  DISABLE_UI: \"disable-ui\",\r\n  START_ANIM: \"start-animation\",\r\n  SEARCHED_NODES: \"searched-nodes\",\r\n  START_SEARCH_ANIMATIONS: \"start-search-animation\",\r\n  LUCKY_NODE: \"lucky-node\",\r\n  ANIMATION_DELAY: \"animation-delay\",\r\n  NO_END: \"no-end\",\r\n};\r\n\r\nconst initialState = {\r\n  // grid states\r\n  numRows: GridDetails.numRows,\r\n  numCols: GridDetails.numCols,\r\n  cellSize: GridDetails.cellSize,\r\n  stroke: GridDetails.stroke,\r\n\r\n  // start/end node states\r\n  startPos: [StartNode.xLoc, StartNode.yLoc],\r\n  endPos: [EndNode.xLoc, EndNode.yLoc],\r\n  setStart: false,\r\n  setEnd: false,\r\n\r\n  // wall node states\r\n  setDrawWall: false,\r\n\r\n  // misc states\r\n  disableUI: false,\r\n  startAnim: false,\r\n  animationDelay: 25,\r\n  searchedNodes: [],\r\n  startSearchedAnimation: false,\r\n  noEnd: false,\r\n  luckyNode: [], // the node that found the end.\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    // grid actions\r\n    case ACTIONS.BUILD_GRID:\r\n      return {};\r\n    case ACTIONS.GRID_ROWS_SET:\r\n      return { ...state, numRows: parseInt(action.payload) };\r\n    case ACTIONS.GRID_COLS_SET:\r\n      return { ...state, numCols: parseInt(action.payload) };\r\n    case ACTIONS.CELL_SIZE:\r\n      return {\r\n        ...state,\r\n        cellSize: parseInt(action.payload),\r\n        stroke: parseInt(action.payload) * 0.025,\r\n      };\r\n\r\n    // start node actions\r\n    case ACTIONS.SET_START:\r\n      return {\r\n        ...state,\r\n        startPos: [...action.payload],\r\n      };\r\n    case ACTIONS.TOGGLE_START:\r\n      return {\r\n        ...state,\r\n        setStart: action.payload,\r\n      };\r\n\r\n    // end node actions\r\n    case ACTIONS.SET_END:\r\n      return {\r\n        ...state,\r\n        endPos: [...action.payload],\r\n      };\r\n    case ACTIONS.TOGGLE_END:\r\n      return {\r\n        ...state,\r\n        setEnd: action.payload,\r\n      };\r\n\r\n    // wall node actions\r\n    case ACTIONS.DRAW_WALL:\r\n      return {\r\n        ...state,\r\n        setDrawWall: action.payload,\r\n      };\r\n\r\n    //\r\n    case ACTIONS.RESET:\r\n      return {\r\n        ...state, // grid states\r\n        numRows: GridDetails.numRows,\r\n        numCols: GridDetails.numCols,\r\n        cellSize: GridDetails.cellSize,\r\n        stroke: GridDetails.stroke,\r\n\r\n        // start/end node states\r\n        startPos: [StartNode.xLoc, StartNode.yLoc],\r\n        endPos: [EndNode.xLoc, EndNode.yLoc],\r\n        setStart: false,\r\n        setEnd: false,\r\n\r\n        // wall node states\r\n        setDrawWall: false,\r\n\r\n        // misc states\r\n        disableUI: false,\r\n        startAnim: false,\r\n        animationDelay: 25,\r\n        searchedNodes: [],\r\n        startSearchedAnimation: false,\r\n        noEnd: false,\r\n        luckyNode: [], // the node that found the end.\r\n      };\r\n\r\n    // misc commands\r\n    case ACTIONS.DISABLE_UI:\r\n      return {\r\n        ...state,\r\n        disableUI: action.payload,\r\n      };\r\n    case ACTIONS.START_ANIM:\r\n      return {\r\n        ...state,\r\n        startAnim: action.payload,\r\n      };\r\n    case ACTIONS.SEARCHED_NODES:\r\n      return {\r\n        ...state,\r\n        searchedNodes: [...state.searchedNodes].concat(action.payload),\r\n      };\r\n    case ACTIONS.START_SEARCH_ANIMATIONS:\r\n      return {\r\n        ...state,\r\n        startSearchedAnimation: action.payload,\r\n      };\r\n    case ACTIONS.LUCKY_NODE:\r\n      return {\r\n        ...state,\r\n        luckyNode: action.payload,\r\n      };\r\n    case ACTIONS.ANIMATION_DELAY:\r\n      return {\r\n        ...state,\r\n        animationDelay: action.payload * 25,\r\n      };\r\n    case ACTIONS.NO_END:\r\n      return { ...state, noEnd: action.payload };\r\n    //\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function GridProvider(props) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GridContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </GridContext.Provider>\r\n  );\r\n}\r\n\r\n// let element = document.getElementById(`${action.payload[0]}, ${action.payload[1]}`)\r\n// element.classList.add(\"testing2\")\r\n// console.log(element)\r\n","////// slider component reverse-engineered from:\r\n// https://www.npmjs.com/package/react-input-range-slider\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { GridContext, ACTIONS } from \"../contexts/GridContext\";\r\n\r\nexport default function SlideBar({ id, label, min, max, step, enable }) {\r\n  const [state, dispatch] = useContext(GridContext);\r\n  const handleChange = (e) => {\r\n    if (label === \"Rows\") {\r\n      dispatch({ type: ACTIONS.GRID_ROWS_SET, payload: e.target.value });\r\n    } else if (label === \"Cols\") {\r\n      dispatch({ type: ACTIONS.GRID_COLS_SET, payload: e.target.value });\r\n    } else if (label === \"Size\") {\r\n      dispatch({ type: ACTIONS.CELL_SIZE, payload: e.target.value });\r\n    } else if (label === \"Animation Speed\") {\r\n      dispatch({ type: ACTIONS.ANIMATION_DELAY, payload: e.target.value });\r\n    }\r\n  };\r\n\r\n  let override = false;\r\n  let overrideText = \"\";\r\n  let item;\r\n  if (label === \"Rows\") {\r\n    item = state.numRows;\r\n  } else if (label === \"Cols\") {\r\n    item = state.numCols;\r\n  } else if (label === \"Size\") {\r\n    item = state.cellSize;\r\n  } else if (label === \"Animation Speed\") {\r\n    override = true;\r\n    item = state.animationDelay / 25;\r\n    if (state.animationDelay === 25) {\r\n      overrideText = \"Fast animation\";\r\n    } else if (state.animationDelay === 50) {\r\n      overrideText = \"Medium animation\";\r\n    } else if (state.animationDelay === 75) {\r\n      overrideText = \"Slow animation\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input\r\n          className=\"slider\"\r\n          disabled={enable}\r\n          hidden={enable}\r\n          id={`slider${id}`}\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={item}\r\n          step={step}\r\n          onChange={handleChange}\r\n        />\r\n        <label\r\n      \r\n          htmlFor={`slider${id}`}\r\n          hidden={enable}\r\n          style={{ fontSize: \"1rem\" }}\r\n        >\r\n          {override ? ` ${overrideText}` : ` ${item} ${label}`}\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\n// import styles from './styles.module.css'\r\n\r\n/*\r\nbody {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.row {\r\n  display: block;\r\n  width: 90%;\r\n  margin: 5%;\r\n}\r\n\r\n.slider {\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n  height: 10px;\r\n  border-radius: 5px;\r\n  background: #ccc;\r\n  outline: none;\r\n  opacity: 0.7;\r\n  -webkit-transition: 0.2s;\r\n  transition: opacity 0.2s;\r\n  cursor: pointer;\r\n}\r\n\r\n.slider:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.slider::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: #00adb5;\r\n  cursor: pointer;\r\n}\r\n\r\n.slider::-moz-range-thumb {\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%;\r\n  background: #00adb5;\r\n  cursor: pointer;\r\n}\r\n*/\r\n\r\n/*\r\n <>\r\n{/ * <div className={styles.value} * /}\r\n      <div\r\n        // style={{\r\n          // display: 'block',\r\n          // textAlign: 'center',\r\n          // marginTop: '5%',\r\n          // color: '#00adb5'\r\n        // }}\r\n      >\r\n{/ * {currentValue} * /}\r\n      </div>\r\n{/ * <div className={styles.row}> * /}\r\n      <div >\r\n        <input\r\n          type='range'\r\n          // className={styles.slider}\r\n          styles={{\r\n\r\n          }}\r\n          min={min}\r\n          max={max}\r\n          value={currentValue}\r\n          step={step}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </>\r\n*/\r\n","import React from \"react\";\r\n\r\nimport \"../pathStyles.css\";\r\n\r\n// returns a 2d array\r\nexport default function BuildGrid(state) {\r\n  const grid = [];\r\n  for (let i = 0; i < state.numRows; i++) {\r\n    grid.push([]);\r\n    for (let j = 0; j < state.numCols; j++) {\r\n      grid[i].push(BuildCell(i, j));\r\n    }\r\n  }\r\n\r\n  function BuildCell(row, col) {\r\n    const currClass = \"grid\";\r\n    let nodeClass = \"\";\r\n    let wasVisited;\r\n\r\n    if (state.startPos[1] === row && state.startPos[0] === col) {\r\n      nodeClass = currClass.concat(\" startNode\");\r\n      wasVisited = true;\r\n    } else if (state.endPos[1] === row && state.endPos[0] === col) {\r\n      nodeClass = currClass.concat(\" endNode\");\r\n      wasVisited = true;\r\n    } else {\r\n      nodeClass = currClass.concat(\" unvisitedNode\");\r\n      wasVisited = false;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={`${col}, ${row}`}\r\n        id={`${col}, ${row}`}\r\n        x-loc={col}\r\n        y-loc={row}\r\n        was-visited={wasVisited.toString()}\r\n        className={nodeClass}\r\n        style={{\r\n          height: state.cellSize,\r\n          width: state.cellSize,\r\n          border: `${state.stroke}px solid red`,\r\n        }}\r\n      >\r\n        {/* {col}, {row} */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return grid;\r\n}\r\n","// returns [returnArr (array), continueSearch (bool), foundEnd (bool), luckyNode (array)];\r\nexport default function FindNeighbor(startSpot, state) {\r\n  // up (0, -1), right (+1, 0), down (0, +1), left (-1, 0)\r\n  const neighborLocations = [\r\n    [0, -1], // up\r\n    [1, 0], // right\r\n    [0, 1], // down\r\n    [-1, 0], // left\r\n  ];\r\n\r\n  const returnArr = [];\r\n  let continueSearch = true;\r\n  let foundEnd = false;\r\n  let luckyNode = [];\r\n\r\n  neighborLocations.forEach((searchSpot) => {\r\n    let tempSpot = searchSpot.map((num, idx) => {\r\n      return num + startSpot[idx];\r\n    });\r\n\r\n    if (\r\n      tempSpot[1] < 0 || // out of bounds - top\r\n      tempSpot[0] >= state.numCols || // out of bounds - right\r\n      tempSpot[1] >= state.numRows || // out of bounds - bottom\r\n      tempSpot[0] < 0 // out of bounds - left\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (continueSearch) {\r\n      AssessNode(tempSpot);\r\n    }\r\n  });\r\n\r\n  function AssessNode(searchPos) {\r\n    const element = document.getElementById(`${searchPos[0]}, ${searchPos[1]}`);\r\n\r\n    if (element.classList.contains(\"startNode\")) {\r\n      //\r\n    } else if (element.classList.contains(\"endNode\")) {\r\n      // console.log(`${searchPos} is end node`);\r\n      continueSearch = false;\r\n      foundEnd = true;\r\n      luckyNode = searchPos;\r\n      element.setAttribute(\"parent-node\", `${startSpot[0]}, ${startSpot[1]}`);\r\n    } else if (element.getAttribute(\"was-visited\") === \"true\") {\r\n      //\r\n    } else if (element.classList.contains(\"wallNode\")) {\r\n      //\r\n    } else {\r\n      // not a startNode, endNode, visitedNode, wall, or out-of-bounds\r\n      element.setAttribute(\"was-visited\", \"true\");\r\n      element.setAttribute(\"parent-node\", `${startSpot[0]}, ${startSpot[1]}`);\r\n      returnArr.push(searchPos);\r\n    }\r\n  }\r\n  return [returnArr, continueSearch, foundEnd, luckyNode];\r\n}\r\n\r\n/*\r\n\r\n      if (\r\n        tempSpot[1] < 0 || // out of bounds - top\r\n        tempSpot[0] >= state.numCols || // out of bounds - right\r\n        tempSpot[1] > state.numRows || // out of bounds - bottom\r\n        tempSpot[0] < 0 // out of bounds - left\r\n      ) {\r\n        return;\r\n      }\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport { GridDetails } from \"../components/GridSettings\";\r\n\r\nexport default function FindNeighbor(startNode) {\r\n  let searchNode = [];\r\n  const returnArr = [];\r\n  let continueSearch = true;\r\n  let foundEnd = false;\r\n  let luckyNode = []\r\n\r\n  function AssessNode(searchPos, searchSpot) {\r\n    const element = document.getElementById(\r\n      `${searchSpot[0]}, ${searchSpot[1]}`\r\n    );\r\n\r\n    if (element.classList.contains(\"startNode\")) {\r\n      //\r\n    } else if (element.classList.contains(\"endNode\")) {\r\n      console.log(`${searchSpot} is end node`);\r\n      continueSearch = false;\r\n      foundEnd = true;\r\n    } else if (element.getAttribute(\"was-visited\") === \"true\") {\r\n      //\r\n    } else if (element.classList.contains(\"wallNode\")) {\r\n      //\r\n    } else {\r\n      element.setAttribute(\"was-visited\", \"true\");\r\n      element.setAttribute(\"parent-node\", `${startSpot[0]}, ${startSpot[1]}`);\r\n      returnArr.push(searchSpot);\r\n    }\r\n  }\r\n\r\n  // up (0, -1)\r\n  searchNode = [startNode[0], startNode[1] - 1];\r\n  if (searchNode[1] < 0) {\r\n    //\r\n  } else {\r\n    if (continueSearch) {\r\n      AssessNode(startNode, searchNode);\r\n    }\r\n    if (foundEnd) {\r\n      luckyNode = startNode\r\n    }\r\n  }\r\n\r\n  // right (+1, 0)\r\n  searchNode = [startNode[0] + 1, startNode[1]];\r\n  if (searchNode[0] >= GridDetails.numCols) {\r\n    //\r\n  } else {\r\n    if (continueSearch) {\r\n      AssessNode(startNode, searchNode);\r\n    }\r\n    if (foundEnd) {\r\n      luckyNode = startNode\r\n    }\r\n  }\r\n\r\n  // down (0, +1) \r\n  searchNode = [startNode[0], startNode[1] + 1];\r\n  if (searchNode[1] >= GridDetails.numRows) {\r\n    //\r\n  } else {\r\n    if (continueSearch) {\r\n      AssessNode(startNode, searchNode);\r\n    }\r\n    if (foundEnd) {\r\n      luckyNode = startNode\r\n    }\r\n  }\r\n\r\n  // left (-1, 0)\r\n  searchNode = [startNode[0] - 1, startNode[1]];\r\n  if (searchNode[0] < 0) {\r\n    //\r\n  } else {\r\n    if (continueSearch) {\r\n      AssessNode(startNode, searchNode);\r\n    }\r\n    if (foundEnd) {\r\n      luckyNode = startNode\r\n    }\r\n  }\r\n\r\n  return [returnArr, continueSearch, foundEnd, luckyNode];\r\n}\r\n\r\n*/\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { GridContext, ACTIONS } from \"../contexts/GridContext\";\r\nimport SlideBar from \"../components/SlideBar\";\r\nimport BuildGrid from \"../components/BuildGrid\";\r\nimport FindNeighbor from \"../algorithms/FindNeighbor\";\r\n\r\nexport default function Grid() {\r\n  const [state, dispatch] = useContext(GridContext);\r\n  const [grid, setGrid] = useState(BuildGrid(state));\r\n  let searchNode = [];\r\n  let isSearching = false;\r\n  let searchArray = [];\r\n\r\n  // const [mouseDown, setMouseDown] = useState(false); // To keep code organized for what is mine and what isn't, this is only a reference but defined below\r\n\r\n  // BuildGrid()\r\n  useEffect(() => {\r\n    setGrid(BuildGrid(state));\r\n    // eslint-disable-next-line\r\n  }, [\r\n    state.numRows,\r\n    state.numCols,\r\n    state.startPos,\r\n    state.endPos,\r\n    state.cellSize,\r\n  ]);\r\n\r\n  // AnimatedSearchNodes()\r\n  useEffect(() => {\r\n    if (state.startSearchedAnimation) {\r\n      AnimateSearchedNodes();\r\n    } // eslint-disable-next-line\r\n  }, [state.startSearchedAnimation]);\r\n\r\n  // FindPath()\r\n  useEffect(() => {\r\n    if (state.startAnim) {\r\n      const path = FindPath(); // returns list of children array\r\n      setTimeout(() => {\r\n        AnimatePath(path);\r\n      }, state.animationDelay);\r\n    } // eslint-disable-next-line\r\n  }, [state.startAnim]);\r\n\r\n  function AnimateSearchedNodes() {\r\n    const tempSearched = [...state.searchedNodes];\r\n    let count = 0;\r\n    const interval = setInterval(() => {\r\n      if (count < state.searchedNodes.length) {\r\n        const activeNode = tempSearched.shift();\r\n        const element = document.getElementById(\r\n          `${activeNode[0]}, ${activeNode[1]}`\r\n        );\r\n        const shorthand = ReactDOM.findDOMNode(element).classList;\r\n        shorthand.add(\"visitedNode\");\r\n      } else {\r\n        dispatch({ type: ACTIONS.START_ANIM, payload: true });\r\n        clearInterval(interval);\r\n      }\r\n      count++;\r\n    }, state.animationDelay);\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  function FindPath() {\r\n    const listOfChildren = [`${state.luckyNode[0]}, ${state.luckyNode[1]}`];\r\n\r\n    let search = true;\r\n    const start = state.startPos[0] + \", \" + state.startPos[1];\r\n    while (search) {\r\n      let parent = listOfChildren.slice(-1);\r\n\r\n      //   eslint-disable-next-line\r\n      if (parent[0] == start) {\r\n        search = false;\r\n      } else {\r\n        const element = document.getElementById(parent);\r\n        if (element) {\r\n          listOfChildren.push(element.getAttribute(\"parent-node\"));\r\n        }\r\n      }\r\n    }\r\n\r\n    return listOfChildren;\r\n  }\r\n\r\n  function AnimatePath(listOfChildren) {\r\n    let i = listOfChildren.length;\r\n    const start = state.startPos[0] + \", \" + state.startPos[1];\r\n    const interval = setInterval(() => {\r\n      if (i > 0) {\r\n        i--;\r\n        let path = listOfChildren.pop();\r\n        // eslint-disable-next-line\r\n        if (path != start) {\r\n          const element = document.getElementById(path);\r\n          const shorthand = ReactDOM.findDOMNode(element).classList;\r\n          if (\r\n            !shorthand.contains(\"endNode\") &&\r\n            !shorthand.contains(\"startNode\")\r\n          ) {\r\n            shorthand.add(\"pathNode\");\r\n            //\r\n          } else {\r\n            //\r\n          }\r\n        }\r\n      }\r\n    }, state.animationDelay);\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  function handleClick(e) {\r\n    const clickLocation = [\r\n      parseInt(e.target.getAttribute(\"x-loc\")),\r\n      parseInt(e.target.getAttribute(\"y-loc\")),\r\n    ];\r\n\r\n    if (state.setStart) {\r\n      dispatch({\r\n        type: ACTIONS.SET_START,\r\n        payload: clickLocation,\r\n      });\r\n      dispatch({\r\n        type: ACTIONS.TOGGLE_START,\r\n        payload: false,\r\n      });\r\n    } else if (state.setEnd) {\r\n      dispatch({\r\n        type: ACTIONS.SET_END,\r\n        payload: clickLocation,\r\n      });\r\n      dispatch({\r\n        type: ACTIONS.TOGGLE_END,\r\n        payload: false,\r\n      });\r\n    } else {\r\n      // console.log(e.target.id); // string \"#, #\"\r\n      // console.log(clickLocation); // array [number, number]\r\n    }\r\n  }\r\n\r\n  function SearchForNeighbors() {\r\n    dispatch({ type: ACTIONS.DISABLE_UI, payload: true });\r\n    do {\r\n      GetNeighbor();\r\n    } while (isSearching);\r\n  }\r\n\r\n  function GetNeighbor() {\r\n    let locatedEnd = false;\r\n\r\n    if (searchArray.length <= 0 && !isSearching) {\r\n      // start search w/ startNode\r\n      searchNode = [...state.startPos];\r\n      isSearching = true;\r\n    } else if (searchArray.length > 0) {\r\n      // continue search\r\n      searchNode = searchArray.shift();\r\n    } else {\r\n      // no end located\r\n      dispatch({ type: ACTIONS.NO_END, payload: true });\r\n      isSearching = false;\r\n    }\r\n\r\n    if (searchNode.length > 0) {\r\n      const [\r\n        searchResults,\r\n        continueSearch,\r\n        foundEnd,\r\n        returnLuckyNode,\r\n      ] = FindNeighbor(searchNode, state); // return [returnArr (arr), continueSearch (bool), foundEnd (bool), luckyNode (arr)];\r\n\r\n      if (foundEnd) {\r\n        locatedEnd = foundEnd;\r\n        dispatch({ type: ACTIONS.LUCKY_NODE, payload: returnLuckyNode });\r\n        isSearching = false;\r\n      }\r\n\r\n      if (continueSearch) {\r\n        searchArray = searchArray.concat(searchResults);\r\n        dispatch({\r\n          type: ACTIONS.SEARCHED_NODES,\r\n          payload: searchResults,\r\n        });\r\n      } else {\r\n        searchArray = searchResults;\r\n        dispatch({\r\n          type: ACTIONS.SEARCHED_NODES,\r\n          payload: searchResults,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (locatedEnd) {\r\n      dispatch({ type: ACTIONS.START_SEARCH_ANIMATIONS, payload: true });\r\n    }\r\n  }\r\n\r\n  ////// start section - pieces/foundation of this code located at:\r\n  // https://gist.github.com/dimitrinicolas/f8768ae7b664b6259eb923157b16d4fc\r\n  // then modified to work with what I had in mind.\r\n\r\n  const [mouseDown, setMouseDown] = useState(false);\r\n\r\n  // initial setup for click\r\n  useEffect(() => {\r\n    const handleDocumentMouseUp = (event) => {\r\n      if (event.button !== 2) {\r\n        setTimeout(() => setMouseDown(false), 10);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", handleDocumentMouseUp);\r\n    return () => {\r\n      document.removeEventListener(\"mouseup\", handleDocumentMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  const handleMouseDown = (event) => {\r\n    if (state.setStart || state.setEnd) {\r\n      return;\r\n    }\r\n    const element = document.getElementById(event.target.id);\r\n    const shorthand = ReactDOM.findDOMNode(element).classList;\r\n\r\n    if (event.button !== 2) {\r\n      setMouseDown(true);\r\n    }\r\n\r\n    let tempDraw = false;\r\n    if (shorthand.contains(\"wallNode\")) {\r\n      dispatch({ type: ACTIONS.DRAW_WALL, payload: false });\r\n    } else {\r\n      dispatch({ type: ACTIONS.DRAW_WALL, payload: true });\r\n      tempDraw = true;\r\n    }\r\n\r\n    handleWall(shorthand, tempDraw);\r\n  };\r\n\r\n  const handleMouseEnter = (event) => {\r\n    if (state.setStart || state.setEnd) {\r\n      return;\r\n    }\r\n    if (event.button !== 2 && mouseDown) {\r\n      const element = document.getElementById(event.target.id);\r\n      const shorthand = ReactDOM.findDOMNode(element).classList;\r\n      handleWall(shorthand);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (event) => {\r\n    if (event.button !== 2) {\r\n      setMouseDown(false);\r\n\r\n      if (window.getSelection) {\r\n        window.getSelection().removeAllRanges();\r\n      }\r\n    }\r\n  };\r\n\r\n  //\r\n  ////// section end\r\n\r\n  function handleWall(shorthand, override = null) {\r\n    if (shorthand.contains(\"startNode\") || shorthand.contains(\"endNode\")) {\r\n      return;\r\n    }\r\n    if (override != null) {\r\n      if (override) {\r\n        shorthand.add(\"wallNode\");\r\n      } else {\r\n        shorthand.remove(\"wallNode\");\r\n      }\r\n    } else {\r\n      // if user wants to add a wall and the node DOESN'T have a wallNode\r\n      if (state.setDrawWall && !shorthand.contains(\"wallNode\")) {\r\n        shorthand.add(\"wallNode\");\r\n      }\r\n      // if the user wants to remove a wall but the node DOES have a wallNode\r\n      else if (!state.setDrawWall && shorthand.contains(\"wallNode\")) {\r\n        shorthand.remove(\"wallNode\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function Reset() {\r\n    console.log(state.locatedEnd);\r\n    dispatch({ type: ACTIONS.RESET });\r\n    setGrid([]);\r\n    searchNode = [];\r\n    isSearching = false;\r\n    searchArray = [];\r\n  }\r\n  return (\r\n    <>\r\n      <section style={{ display: \"flex\" }}>\r\n        <div style={{ height: \"80px\", width: \"275px\" }}>\r\n          <p\r\n            disabled={!state.noEnd}\r\n            hidden={!state.noEnd}\r\n            style={{ color: \"red\" }}\r\n          >\r\n            No path found.\r\n          </p>\r\n          <p\r\n            disabled={!state.noEnd}\r\n            hidden={!state.noEnd}\r\n            // style={{ color: \"red\" }}\r\n          >\r\n            Make sure there is a start and end node on the grid, and those nodes\r\n            are not sealed off by walls.\r\n          </p>\r\n\r\n          <SlideBar\r\n            enable={state.disableUI}\r\n            id={1}\r\n            label=\"Rows\"\r\n            min={5}\r\n            max={30}\r\n            step={1}\r\n            value={state.numRows}\r\n            callback={state.numRows}\r\n          />\r\n          <SlideBar\r\n            enable={state.disableUI}\r\n            id={2}\r\n            label=\"Cols\"\r\n            min={5}\r\n            max={30}\r\n            step={1}\r\n            value={state.numCols}\r\n            callback={state.numCols}\r\n          />\r\n          <SlideBar\r\n            enable={state.disableUI}\r\n            id={3}\r\n            label=\"Size\"\r\n            min={20}\r\n            max={40}\r\n            step={1}\r\n            value={state.cellSize}\r\n            callback={state.cellSize}\r\n          />\r\n          <SlideBar\r\n            enable={state.disableUI}\r\n            id={4}\r\n            label=\"Animation Speed\"\r\n            min={1}\r\n            max={3}\r\n            step={1}\r\n            value={state.animationDelay}\r\n            callback={state.animationDelay}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          disabled={state.disableUI}\r\n          hidden={state.disableUI}\r\n          style={{\r\n            height: \"40px\",\r\n            width: \"100px\",\r\n            marginLeft: \"10px\",\r\n            backgroundColor: state.setStart ? \"rgba(255, 0, 0, 0.50)\" : \"\",\r\n          }}\r\n          onClick={() =>\r\n            dispatch({\r\n              type: ACTIONS.TOGGLE_START,\r\n              payload: !state.setStart,\r\n            })\r\n          }\r\n        >\r\n          Set Start\r\n        </button>\r\n\r\n        <button\r\n          disabled={state.disableUI}\r\n          hidden={state.disableUI}\r\n          style={{\r\n            height: \"40px\",\r\n            width: \"100px\",\r\n            marginLeft: \"10px\",\r\n            backgroundColor: state.setEnd ? \"rgba(0, 0, 255, 0.5)\" : \"\",\r\n          }}\r\n          onClick={() =>\r\n            dispatch({\r\n              type: ACTIONS.TOGGLE_END,\r\n              payload: !state.setEnd,\r\n            })\r\n          }\r\n        >\r\n          Set End\r\n        </button>\r\n\r\n        <button\r\n          disabled={state.disableUI}\r\n          hidden={state.disableUI}\r\n          onClick={() => SearchForNeighbors()}\r\n          style={{ height: \"40px\", width: \"100px\", marginLeft: \"10px\" }}\r\n        >\r\n          Get Path\r\n        </button>\r\n        <button\r\n          disabled={!state.disableUI}\r\n          hidden={!state.disableUI}\r\n          onClick={() => Reset()}\r\n          style={{ height: \"40px\", width: \"100px\", marginLeft: \"10px\" }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </section>\r\n      <br />\r\n\r\n      <div\r\n        onClick={(e) => handleClick(e)}\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n      >\r\n        {grid.map((rows) => {\r\n          return (\r\n            <div\r\n              // key={Math.random(0, 1) * 1000}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              {rows.map((cell) => {\r\n                return (\r\n                  <div\r\n                    // key={Math.random(0, 1) * 1000}\r\n                    onMouseDown={handleMouseDown}\r\n                    onMouseEnter={handleMouseEnter}\r\n                    onMouseUp={handleMouseUp}\r\n                  >\r\n                    {cell}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Grid from \"./components/Grid\";\r\nimport { GridProvider } from \"./contexts/GridContext\";\r\n\r\nimport \"./pathStyles.css\";\r\n\r\nexport default function MyPath() {\r\n  return (\r\n    <div>\r\n      <p>\r\n        This project is my take on Dijkstra's algorithm. Beyond the general\r\n        explanation of what it is, I did all of this by thinking about how to do\r\n        it.\r\n      </p>\r\n      <p>\r\n        This project was inspired by{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"https://clementmihailescu.github.io/Pathfinding-Visualizer/\"\r\n        >\r\n          Clement Mihailescu's\r\n        </a>{\" \"}\r\n        page.\r\n      </p>\r\n      <p>\r\n        To use: Left-click and drag to create/remove walls.  Use the sliders to\r\n        adjust the height/width/scale of the grid, and click on the \"Set Start\" or\r\n        \"Set End\" button then click on the grid to re-position the start/end node. Click \"Get Path\"\r\n        to initiate the path finding algorithm.\r\n      </p>\r\n      <hr style={{ margin: \"10px 0px\" }} />\r\n      <GridProvider>\r\n        <Grid />\r\n      </GridProvider>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport MyPath from \"../components/MyPath/MyPath\";\r\n\r\nexport default function Algos() {\r\n  const [algo, setAlgo] = useState(\"Pathing\");\r\n\r\n  function handleClick(input) {\r\n    setAlgo(input);\r\n  }\r\n\r\n  const handleComp = () => {\r\n    if (algo === \"Pathing\") {\r\n      return <MyPath />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button style={{width: \"150px\"}}onClick={() => handleClick(\"Pathing\")}>Pathing Algoritm</button>\r\n      <h3 className=\"subjectTitle\">{algo}</h3>\r\n      {handleComp()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <div>\r\n      <h3 className=\"subjectTitle\">Projects</h3>\r\n      <p>JPEdgar.com (in progress)</p>\r\n      {/* <img src=\"https://picsum.photos/200/300\" alt=\"placeholder\"></img> */}\r\n      <p>\r\n        This project is my author website and was designed initially with\r\n        templates from webs.com, but I've been working on redesigning this\r\n        project from scratch.\r\n      </p>\r\n      <p>\r\n        This project utilizes front-end and back-end development with\r\n        authentication for blog control.\r\n      </p>\r\n      <p>\r\n        Technologies used: React written in Javascript, React Router, React\r\n        Bootstrap, Bootstrap Social, JSON server, font-awesome, editor.js, and\r\n        Firebase.\r\n      </p>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        href=\"https://github.com/JPEdgar/JPEdgar.com.git\"\r\n        className=\"fab fa-github\"\r\n        style={{ fontSize: \"1.2rem\" }}\r\n      >\r\n        GitHub\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h3 className=\"subjectTitle\">About me</h3>\r\n      <p>\r\n        I'm a self-taught programmer with a bachelor's degree in entertainment\r\n        and game design. When the economy receded in 2008, I started my own\r\n        company focused on mobile game design and prototype development using\r\n        Unity and JavaScript. Unfortunately, I wasn't able to secure any\r\n        artists, and the company went out of business before releasing any\r\n        titles.\r\n      </p>\r\n      <p>\r\n        With the closure of my company, I went on a programming hiatus. I picked\r\n        up programming once more in August 2020, relearning best practices and\r\n        getting back into the mindset of a once-aspiring programmer/developer.\r\n      </p>\r\n      <p>\r\n        My pastime includes (but not limited to) writing novels. I'm a published\r\n        author of multiple books, and I'm building my website for professional\r\n        use.\r\n      </p>\r\n      <p>Primary Language(s): JavaScript, HTML/CSS/SCSS</p>\r\n      <p>Technologies/Libraries: React, Unity</p>\r\n      <p>React Libraries: Router, Font-Awesome, Express, Axios</p>\r\n      <p>React Frameworks: Bootstrap, Bootstrap-Social, JSON Server</p>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n      <i className=\"icon fab fa-react\"> React</i>\r\n      <i className=\"icon fab fa-bootstrap\"> Bootstrap</i>\r\n      <i className=\"icon fab fa-html5\"> HTML</i>\r\n      <i className=\"icon fab fa-css3\"> CSS</i>\r\n      <i className=\"icon fab fa-js-square\"> JavaScript</i>\r\n      <i className=\"icon fab fa-unity\"> Unity</i>\r\n      \r\n*/","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Algos from \"./pages/Algos.jsx\";\nimport Projects from \"./pages/Projects\";\nimport About from \"./pages/About\";\n\nimport \"./styles.css\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nexport default function App() {\n  return (\n    <div className=\"main\">\n      <header\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          height: \"100px\",\n        }}\n      >\n        <div className=\"header myName\">Jonathon Edgar</div>\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/JPEdgar/\"\n          className=\"fab fa-github header icon\"\n        >\n          {\" \"}GitHub\n        </a>\n      </header>\n\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link className=\"nav\" to=\"/\">\n                Algorithms\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav\" to=\"/projects\">\n                Projects\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav\" to=\"/about\">\n                About\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <Algos />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}